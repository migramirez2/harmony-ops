{
	"info": {
		"_postman_id": "eed0bb14-47d3-4faf-89fe-f20cc210c8af",
		"name": "Harmony API Tests - only-explorer (Env Vars)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "hmy_sendRawTransaction",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10201ab5-3efc-4c63-aae3-2f6c29f5b7cb",
						"exec": [
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test(\"Response should not contain errors.\", () => {",
							"    pm.expect('error' in pm.response.json()).to.equal(false);",
							"})",
							"",
							"pm.test(\"Response should have non-null result field.\", () => {",
							"    pm.expect(pm.response.json()).to.include.keys(\"result\");",
							"    pm.expect(pm.response.json().result).not.equal(null);",
							"})",
							"",
							"pm.environment.set('txHash', pm.response.json().result)",
							"",
							"let delay = pm.variables.get(\"txn_delay\")",
							"console.log(\"Sleeping \" + delay + \" seconds for cross-shard transaction finality...\")",
							"setTimeout(function(){}, [delay * 1000]); // Timeout for txn"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"jsonrpc\":\"2.0\",\"method\":\"hmy_sendRawTransaction\",\"params\":[\"{{rawTransaction}}\"],\"id\":1}"
				},
				"url": {
					"raw": "{{hmy_endpoint_src}}",
					"host": [
						"{{hmy_endpoint_src}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "blocks_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "88a84d0c-ad3b-47b2-a361-229ea7531e67",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test(\"Response should not be an empty array.\", () => {",
							"    pm.expect(pm.response.json().length).not.equal(0)",
							"})",
							"",
							"pm.test('Response array length should be the difference of the search bounds plus one.', () => {",
							"    pm.expect(pm.response.json().length).to.equal(",
							"        pm.request.url.query.get('to') - pm.request.url.query.get('from') + 1);",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{hmy_exp_endpoint}}blocks?from=0&to=4",
					"host": [
						"{{hmy_exp_endpoint}}blocks"
					],
					"query": [
						{
							"key": "from",
							"value": "0"
						},
						{
							"key": "to",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "tx_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d39f38f5-b514-4455-856b-fed5041be377",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test('Response ID should not be empty.', () => {",
							"    pm.expect(pm.response.json().id).not.equal('')",
							"})",
							"",
							"pm.test('Response ID should match ID specified in the URL', () => {",
							"    pm.expect(pm.request.url.query.get('id')).to.equal(pm.response.json().id)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{tx_beta_endpoint}}tx?id={{txHash}}",
					"host": [
						"{{tx_beta_endpoint}}tx"
					],
					"query": [
						{
							"key": "id",
							"value": "{{txHash}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "address_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ee6a018-b1c2-43aa-b7c1-56b39dd42854",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test('Transactions array should be not null.', () => {",
							"    pm.expect(pm.response.json().txs).not.equal(null)",
							"})",
							"",
							"pm.test('Length of transactions array should match offset parameter in url.', () => {",
							"    pm.expect(pm.response.json().txs.length).to.equal(",
							"        parseInt(pm.request.url.query.get('offset')))",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{hmy_exp_endpoint}}address?id=one1vjywuur8ckddmc4dsyx6qdgf590eu07ag9fg4a&tx_view=ALL&offset=5&page=2",
					"host": [
						"{{hmy_exp_endpoint}}address"
					],
					"query": [
						{
							"key": "id",
							"value": "one1vjywuur8ckddmc4dsyx6qdgf590eu07ag9fg4a"
						},
						{
							"key": "tx_view",
							"value": "ALL"
						},
						{
							"key": "offset",
							"value": "5"
						},
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "shard_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "291d0466-b106-4260-a9b3-abc78d78afea",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test('Nodes array should not be empty', () => {",
							"    pm.expect(pm.response.json().nodes.length).not.equal(0)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{hmy_exp_endpoint}}shard",
					"host": [
						"{{hmy_exp_endpoint}}shard"
					]
				}
			},
			"response": []
		},
		{
			"name": "node-count_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4bcf610f-c92d-49f9-ab85-ce099a06af21",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{hmy_exp_endpoint}}node-count",
					"host": [
						"{{hmy_exp_endpoint}}node-count"
					]
				}
			},
			"response": []
		},
		{
			"name": "committee_beta",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ef0dce3-f9fa-4d34-8e6c-91f33c88b945",
						"exec": [
							"console.log(\"Request URL\")",
							"console.log(pm.request.url)",
							"console.log()",
							"console.log(\"Request Body\")",
							"console.log(pm.request.body.raw)",
							"console.log()",
							"console.log(\"Response\")",
							"console.log(pm.response.json())",
							"",
							"pm.test('Validators array should not be null.', () => {",
							"    pm.expect(pm.response.json().validators.length).not.equal(0)",
							"})",
							"",
							"tests[\"Response should not be empty\"] = (responseBody.length !== 0)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{hmy_exp_endpoint}}committee?shard_id=0&epoch=0",
					"host": [
						"{{hmy_exp_endpoint}}committee"
					],
					"query": [
						{
							"key": "shard_id",
							"value": "0"
						},
						{
							"key": "epoch",
							"value": "0"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "282173e5-f253-4a1e-bec9-388619e37774",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "04949c30-3d5e-4175-a30e-ab213a31148c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}